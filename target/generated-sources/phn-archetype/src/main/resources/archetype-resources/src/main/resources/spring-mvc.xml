<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context-3.1.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 注解扫描包 -->
	<context:component-scan base-package="${package}.controller" />
	<!-- 开启MVC注解,表示SpringMVC支持注解功能 -->
	<mvc:annotation-driven />

	<!-- 表示不对静态资源如CSS、JS、HTML等进行拦截 -->
	<!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<mvc:default-servlet-handler />
	<!-- 静态资源映射 -->
	<mvc:resources mapping="/images/**" location="/WEB-INF/images/" />
	<mvc:resources mapping="/css/**" location="/WEB-INF/css/" />
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/" />


	<!-- 根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
		p:order="1">
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="false" />

		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false" />

		<property name="mediaTypes">  <!--favorPathExtension, favorParameter是true时才起作用 -->
			<map>
				<!-- <entry key="wml" value="text/vnd.wap.wml"/> -->
				<!-- <entry key="vnd" value="application/vnd.wap.xhtml+xml"/> -->
				<!-- <entry key="xhtml" value="application/xhtml+xml"/> -->
				<entry key="html" value="*" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="contentType" value="text/html" />
					<!-- 代表对返回的视图名进行解析：prefix代表视图名的前缀，suffix代表视图名的后缀 -->
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<!-- 可配置Not Found url -->
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.JstlView"
					p:url="/notfound" />
			</list>
		</property>
	</bean>

	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="3">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- JSON view -->
	<bean id="defaultJsonView"
		class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />

	<!-- 文件上传相关 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!--one of the properties available;the maximum file size in bytes -->
		<property name="maxUploadSize" value="1024000000" />
	</bean>

	<!-- 控制器异常处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error_all</prop>
			</props>
		</property>
	</bean>
</beans>  